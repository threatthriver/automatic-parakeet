import { GoogleGenerativeAI } from '@google/generative-ai';

// Initialize Google Generative AI with API key from environment variables
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);

// Use the gemini-2.5-flash model as specified
const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash" });

/**
 * Generate the final response using Gemini AI
 * @param {string} researchPlan - The research plan generated by Cerebras AI
 * @param {string} webSearchInfo - The web search information processed by Llama-4-Scout
 * @returns {Promise<string>} - The final response generated by Gemini AI
 */
export const generateFinalResponse = async (researchPlan, webSearchInfo) => {
  try {
    // Create a prompt that combines the research plan and web search information
    const prompt = `You are an expert research synthesizer. Your task is to create a comprehensive, well-structured response based on the following research plan and web search information.

Research Plan:
${researchPlan}

Web Search Information:
${webSearchInfo}

Please provide a detailed, cohesive response that:
1. Addresses the original research query
2. Incorporates insights from both the research plan and web search information
3. Is well-organized and easy to understand
4. Provides actionable insights or conclusions

Response:`;

    // Generate the final response
    const result = await model.generateContent(prompt);
    const response = await result.response;
    const text = response.text();
    
    return text;
  } catch (error) {
    console.error('Error generating final response with Gemini:', error.message);
    throw new Error('Failed to generate final response');
  }
};
